// <auto-generated />
using System;
using AuthSystem.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthSystem.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AuthSystem.Domain.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "GetAllMinisters"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "GetAllUsers"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "GetSingleUser"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "BlockUser"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "CreateRole"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "UsersInRole"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "AddUserToRole"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "ViewAllPermission"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "RemoveUserFromRole"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "ViewAllRoles"
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            Name = "RemoveRole"
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            Name = "AddUserPermission"
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            Name = "RemoveUserPermission"
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            Name = "UnblockUser"
                        });
                });

            modelBuilder.Entity("AuthSystem.Domain.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "0006fc23-5048-4cb2-8b55-fe9f9f33606d",
                            Active = true,
                            DateCreated = new DateTime(2025, 10, 7, 22, 27, 46, 607, DateTimeKind.Utc).AddTicks(8140),
                            IsDeleted = false,
                            LastModified = new DateTime(2025, 10, 7, 22, 27, 46, 607, DateTimeKind.Utc).AddTicks(8140),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "1b219c2e-0945-4605-8451-44ac780d4bfe",
                            Active = true,
                            DateCreated = new DateTime(2025, 10, 7, 22, 27, 46, 607, DateTimeKind.Utc).AddTicks(8148),
                            IsDeleted = false,
                            LastModified = new DateTime(2025, 10, 7, 22, 27, 46, 607, DateTimeKind.Utc).AddTicks(8148),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("AuthSystem.Domain.Entities.RolePermission", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RolePermission");

                    b.HasData(
                        new
                        {
                            Id = "edbf484f-5cef-4187-b403-61476a2e7712",
                            Active = true,
                            DateCreated = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(102),
                            IsDeleted = false,
                            LastModified = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(102),
                            PermissionId = 1,
                            RoleId = "6ec0c60b-1219-4417-ab71-ab1e354f9082"
                        },
                        new
                        {
                            Id = "428c5b20-bcb1-49f8-95d6-2b5182559375",
                            Active = true,
                            DateCreated = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(108),
                            IsDeleted = false,
                            LastModified = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(108),
                            PermissionId = 2,
                            RoleId = "6ec0c60b-1219-4417-ab71-ab1e354f9082"
                        },
                        new
                        {
                            Id = "0d0db555-10f7-482e-a6b8-8b2c49c0546d",
                            Active = true,
                            DateCreated = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(112),
                            IsDeleted = false,
                            LastModified = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(113),
                            PermissionId = 3,
                            RoleId = "6ec0c60b-1219-4417-ab71-ab1e354f9082"
                        },
                        new
                        {
                            Id = "211bd871-4ef4-475a-b07c-9d86ba6a7a7c",
                            Active = true,
                            DateCreated = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(117),
                            IsDeleted = false,
                            LastModified = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(118),
                            PermissionId = 4,
                            RoleId = "6ec0c60b-1219-4417-ab71-ab1e354f9082"
                        },
                        new
                        {
                            Id = "0a4bf446-cace-4cbb-a691-b39cadecd15d",
                            Active = true,
                            DateCreated = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(122),
                            IsDeleted = false,
                            LastModified = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(122),
                            PermissionId = 5,
                            RoleId = "6ec0c60b-1219-4417-ab71-ab1e354f9082"
                        },
                        new
                        {
                            Id = "4c7bf70a-44e3-4b4a-9703-0826a231bc38",
                            Active = true,
                            DateCreated = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(128),
                            IsDeleted = false,
                            LastModified = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(128),
                            PermissionId = 6,
                            RoleId = "6ec0c60b-1219-4417-ab71-ab1e354f9082"
                        },
                        new
                        {
                            Id = "476f3c93-57d9-4ff5-b5e6-91c0e1269f13",
                            Active = true,
                            DateCreated = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(137),
                            IsDeleted = false,
                            LastModified = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(137),
                            PermissionId = 7,
                            RoleId = "6ec0c60b-1219-4417-ab71-ab1e354f9082"
                        },
                        new
                        {
                            Id = "64800dee-e773-475a-9959-d3cd6048129a",
                            Active = true,
                            DateCreated = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(141),
                            IsDeleted = false,
                            LastModified = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(141),
                            PermissionId = 8,
                            RoleId = "6ec0c60b-1219-4417-ab71-ab1e354f9082"
                        },
                        new
                        {
                            Id = "c12e40a0-8b50-42e4-8cee-81b96df52667",
                            Active = true,
                            DateCreated = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(145),
                            IsDeleted = false,
                            LastModified = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(146),
                            PermissionId = 9,
                            RoleId = "6ec0c60b-1219-4417-ab71-ab1e354f9082"
                        },
                        new
                        {
                            Id = "f83ec0dc-b5d8-4c4e-97e8-16ec99adc045",
                            Active = true,
                            DateCreated = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(151),
                            IsDeleted = false,
                            LastModified = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(151),
                            PermissionId = 10,
                            RoleId = "6ec0c60b-1219-4417-ab71-ab1e354f9082"
                        },
                        new
                        {
                            Id = "bffafab8-cbec-4cf0-b7de-1c3d1cea61c7",
                            Active = true,
                            DateCreated = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(155),
                            IsDeleted = false,
                            LastModified = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(156),
                            PermissionId = 11,
                            RoleId = "6ec0c60b-1219-4417-ab71-ab1e354f9082"
                        },
                        new
                        {
                            Id = "e244ed59-982e-45ec-8859-ef6ca7a8f920",
                            Active = true,
                            DateCreated = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(160),
                            IsDeleted = false,
                            LastModified = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(160),
                            PermissionId = 12,
                            RoleId = "6ec0c60b-1219-4417-ab71-ab1e354f9082"
                        },
                        new
                        {
                            Id = "1aac6b44-3943-497e-a12e-ccb6ddcc7c63",
                            Active = true,
                            DateCreated = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(164),
                            IsDeleted = false,
                            LastModified = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(165),
                            PermissionId = 13,
                            RoleId = "6ec0c60b-1219-4417-ab71-ab1e354f9082"
                        },
                        new
                        {
                            Id = "3bf2e9a2-9449-47e2-8771-6bf8b81c13e2",
                            Active = true,
                            DateCreated = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(168),
                            IsDeleted = false,
                            LastModified = new DateTime(2025, 10, 7, 22, 27, 46, 608, DateTimeKind.Utc).AddTicks(169),
                            PermissionId = 14,
                            RoleId = "6ec0c60b-1219-4417-ab71-ab1e354f9082"
                        });
                });

            modelBuilder.Entity("AuthSystem.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LoginFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("PhoneNumber");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AuthSystem.Domain.Entities.UserInRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserInRoles");
                });

            modelBuilder.Entity("AuthSystem.Domain.Entities.UserPermission", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermission");
                });

            modelBuilder.Entity("AuthSystem.Domain.Entities.UserPermission", b =>
                {
                    b.HasOne("AuthSystem.Domain.Entities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthSystem.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
